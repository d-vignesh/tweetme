{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","console","log","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","isDetail","handlePerformAction","newActionTweet","content","TweetsList","newTweets","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","concat","results","next","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updatedFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEle","getElementById","ReactDOM","render","StrictMode","e","createElement","TweetsEle","dataset","TweetsFeedEle","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ff8c8a96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n          }\n      }\n  }\nreturn cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  \n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = 'json'\n  \n  const csrftoken = getCookie('csrftoken');\n\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  if (csrftoken) {\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  xhr.onload = function() {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail\n      if (detail === \"Authentication credentials were not provided.\"){\n        if (window.location.href.indexOf('login') === -1) {\n          window.location.href = '/login?showLoginRequired=true'\n        }\n      } \n    }\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function() {\n    callback({'message': 'an error occured'}, 400)\n  }\n  xhr.send(jsonData)\n}\n\n","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup('POST', '/tweets/create/', callback, {content: newTweet})\n}\n \nexport function apiTweetAction(tweetId, action, callback) {\n    const data = {id: tweetId, action: action}\n    backendLookup('POST', '/tweets/action/', callback, data)\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = '/tweets'\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup('GET', endpoint, callback)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup('GET', `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = '/tweets/feed/'\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup('GET', endpoint, callback)\n}\n","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n\n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction) {\n        didPerformAction(response, status)\n      }\n    }\n\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n    }\n    return <button className={className} onClick={handleClick}>  {display} </button>\n  }","import React from 'react'\n\nexport function UserLink(props) {\n  const{username} = props \n\n  const handelUserLink = (event) => {\n    window.location.href= `/profile/${username}`\n  }\n  return <span className='pointer' onClick={handelUserLink}>\n      {props.children}\n  </span>\n}\n\nexport function UserDisplay(props) {\n  const{user, includeFullName} = props \n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null \n\n  return <React.Fragment>\n      {nameDisplay} \n      <UserLink username={user.username}>@{user.username}</UserLink>\n  </React.Fragment>\n}\n\nexport function UserPicture(props) {\n  const {user} = props\n  return <UserLink username={user.username}>\n            <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n                {user.username[0]}\n                </span>\n        </UserLink>\n}","import React, {useState} from 'react'\n\nimport {ActionBtn} from './buttons'\n\nimport {UserDisplay, UserPicture} from '../profiles'\n\nexport function ParentTweet(props) {\n    const {tweet} = props \n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent}/> : null \n}\n\nexport function Tweet(props) {\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props \n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\n    const path = window.location.pathname\n    const match = path.match(/\\d+/)\n    const urlTweetId = match ? match[0] : -1\n    const isDetail = `${tweet.id}` === `${urlTweetId}` \n\n    const handleLink = (event) => {\n      event.preventDefault()\n      window.location.href = `/${tweet.id}`\n    }\n\n    const handlePerformAction = (newActionTweet, status) => {\n      if (status === 200) {\n        setActionTweet(newActionTweet)\n      } else if (status === 201) {\n        if (didRetweet) {\n          didRetweet(newActionTweet)\n        }\n      }\n    }\n\n    return <div className={className}>\n      {isRetweet === true && <div className='mb-2'>\n        <span className='small text-muted'>retweet via <UserDisplay user={retweeter}/></span>\n      </div>}\n      <div className='d-flex'>\n        <div className=''>\n          <UserPicture user={tweet.user} />\n        </div>\n        <div className='col-11'>\n          <div>\n            <UserDisplay includeFullName user={tweet.user}/>\n            <p>{tweet.content}</p>\n            <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n          </div>\n          <div className='btn btn-group px-0'>\n            {(actionTweet && hideActions !== true) && <React.Fragment>\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'like', display:'likes'}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'unlike', display:'unlike'}} />\n              <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: 'retweet', display:'retweet'}} />\n            </React.Fragment>}\n            {isDetail === true ? null : <button className='btn btn-outline-primary' onClick={handleLink}>view</button>}\n          </div>\n        </div>\n      </div>\n    </div>\n  }","import React, {useEffect, useState} from 'react'\n\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState(props.newTweets ? props.newTweets : [])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    \n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if(status === 200) {\n            setTweetsInit(response.results)\n            setNextUrl(response.next)\n            setTweetsDidSet(true)\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n       const updatedTweetsInit = [...tweets]\n       updatedTweetsInit.unshift(newTweet)\n       setTweetsInit(updatedTweetsInit)\n\n       const updatedFinalTweets = [...tweetsInit]\n       updatedFinalTweets.unshift(tweets)\n       setTweets(updatedFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if(status === 200) {\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setNextUrl(response.next)\n            setTweets(newTweets)\n          }\n        }\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index) => {\n      return <Tweet \n                tweet={item} \n                didRetweet={handleDidRetweet}\n                className='my-5 py-5 border bg-white text-dark' \n                key={`${index}-{item.id}`}/>\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>load next</button>}\n    </React.Fragment>\n  }\n","import React from 'react'\n\nimport {apiTweetCreate} from './lookup'\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n\n  const handleBackendUpdate = (response, status) => {\n    if(status === 201) {\n      didTweet(response)\n    } else {\n      console.log(response)\n      alert('an error occured')\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    apiTweetCreate(newVal, handleBackendUpdate)\n    textAreaRef.current.value = ''  \n  }\n  return <div className={props.className}>\n  <form onSubmit={handleSubmit}>\n    <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n    </textarea>\n    <button type='submit' className='btn btn-primary my-3'>tweet</button>\n  </form>\n  </div>\n}","import React, {useEffect, useState} from 'react'\n\nimport {apiTweetFeed} from './lookup'\nimport {Tweet} from './detail'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState(props.newTweets ? props.newTweets : [])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    \n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if(status === 200) {\n            setTweetsInit(response.results)\n            setNextUrl(response.next)\n            setTweetsDidSet(true)\n          }\n        }\n        apiTweetFeed(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n       const updatedTweetsInit = [...tweets]\n       updatedTweetsInit.unshift(newTweet)\n       setTweetsInit(updatedTweetsInit)\n\n       const updatedFinalTweets = [...tweetsInit]\n       updatedFinalTweets.unshift(tweets)\n       setTweets(updatedFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if(status === 200) {\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setNextUrl(response.next)\n            setTweets(newTweets)\n          }\n        }\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index) => {\n      return <Tweet \n                tweet={item} \n                didRetweet={handleDidRetweet}\n                className='my-5 py-5 border bg-white text-dark' \n                key={`${index}-{item.id}`}/>\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>load next</button>}\n    </React.Fragment>\n  }\n","import React, {useState, useEffect} from 'react'\n\nimport {TweetsList} from './list'\nimport {TweetCreate} from './create'\nimport {apiTweetDetail} from './lookup'\nimport {Tweet} from './detail'\nimport {FeedList} from './feed'\n\nexport function FeedComponent(props) {\n\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === 'false' ? false : true \n\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n\n  return <div className={props.className}>\n    {canTweet === true && <TweetCreate className='col-12 mb-3' didTweet={handleNewTweet} /> }\n    <FeedList newTweets={newTweets} {...props}/>\n  </div> \n}\n\nexport function TweetsComponent(props) {\n\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === 'false' ? false : true \n\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n\n  return <div className={props.className}>\n    {canTweet === true && <TweetCreate className='col-12 mb-3' didTweet={handleNewTweet} /> }\n    <TweetsList newTweets={newTweets} {...props}/>\n  </div> \n}\n  \nexport function TweetDetailComponent(props) {\n  const {tweetId} = props \n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] =  useState(null)\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    }\n    else {\n      alert('An error occured when finding your tweet')\n    }\n  }\n\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  }, [didLookup, setDidLookup, tweetId])\n\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\n}\n  ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent, FeedComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEle = document.getElementById('root')\nif (appEle) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    appEle\n  );\n}\n\nconst e = React.createElement\nconst TweetsEle = document.getElementById('tweetme')\nif (TweetsEle) {\n  \n  ReactDOM.render(\n    e(TweetsComponent, TweetsEle.dataset),\n    TweetsEle\n  );\n}\n\nconst TweetsFeedEle = document.getElementById('tweetme-feed')\nif (TweetsFeedEle) {\n  \n  ReactDOM.render(\n    e(FeedComponent, TweetsEle.dataset),\n    TweetsFeedEle\n  );\n}\n\nconst tweetDetailElements = document.querySelectorAll('.tweetme-detail')\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container\n  );\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}